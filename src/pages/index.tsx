import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import * as bsky from "@atproto/api";
import React from "react";
import { AtpSessionEvent } from "@atproto/api";
const { BskyAgent } = bsky;
import { env } from "../env.mjs";
import { ProfileViewDetailed } from "@atproto/api/dist/client/types/app/bsky/actor/defs.js";

// TODO: list this thread: https://bsky.app/profile/pfrazee.com/post/3juupkrgn3t2c

const AGENT = new BskyAgent({
  service: "https://bsky.social",
  persistSession: (_evt: AtpSessionEvent, sess?: bsky.AtpSessionData) => {
    console.log(sess);
  },
});

const ratio = (profile: ProfileViewDetailed) => {
  if (!profile.followersCount) {
    return 1000;
  }
  if (!profile.followsCount) {
    return -1000;
  }
  return profile.followersCount / profile.followsCount;
};

const Home: NextPage = () => {
  const [followers, setFollowers] = React.useState<
    ProfileViewDetailed[] | null
  >(null);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        {!followers && (
          <form
            onSubmit={(e) => {
              const handler = async () => {
                const { data: user } = await AGENT.login({
                  identifier: env.NEXT_PUBLIC_BSKY_USERNAME,
                  password: env.NEXT_PUBLIC_BSKY_PASSWORD,
                });
                const followers = await AGENT.getFollowers({
                  actor: user.did,
                });

                setFollowers(
                  (
                    await Promise.all(
                      followers.data.followers.map((f) =>
                        AGENT.getProfile({
                          actor: f.did,
                        })
                      )
                    )
                  ).map((f) => f.data)
                );
              };
              handler().catch(console.log);
              e.preventDefault();
            }}
          >
            <input
              id="email"
              name="email"
              type="email"
              value={env.NEXT_PUBLIC_BSKY_USERNAME}
            />
            <input
              name="password"
              type="password"
              value={env.NEXT_PUBLIC_BSKY_PASSWORD}
            />
            <input type="submit" />
          </form>
        )}
        {followers
          ?.sort((a, b) => ratio(b) - ratio(a))
          .map((f) => {
            return (
              <div key={f.did} className="flex bg-red-500">
                <img src={f.avatar} className="max-w-xs" />
                <div className="flex flex-col">
                  <div>
                    {f.displayName} ({f.did})
                  </div>
                  <div>followers: {f.followersCount}</div>
                  <div>follows: {f.followsCount}</div>
                  <div>ratio: {ratio(f)}</div>
                  <div>mutuals: {f.viewer?.following ? "yes" : "no"}</div>
                  <div>
                    <a href={`https://staging.bsky.app/profile/${f.handle}`}>
                      {f.handle}
                    </a>
                  </div>
                </div>
              </div>
            );
          })}
      </main>
    </>
  );
};

export default Home;
